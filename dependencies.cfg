# Rules to install some packages that require non-standard recipies,
# because they are not simple eggs.
[instancepython]
# Create bin/instancepython version of the Python interpreter, which loads
# the correct modules on startup.
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = instancepython
extra-paths = ${buildout:directory}/parts/site-packages/

[i18ndude]
# The system that helps find strings for internationalisation
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude == 4.0.1

[egenix-mx-base]
# use the recipe for setup install
recipe = vortex.recipe.setup_install
url = http://eggs.iopen.net/groupserver/cache/egenix-mx-base-3.0.0.tar.gz
package = mx

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}
packages = ${buildout:directory}/src ./Products/

[wsgi]
recipe = collective.recipe.modwsgi
eggs = ${buildout:eggs}
extra-paths = ${buildout:directory}/parts/site-packages/
config-file = ${buildout:directory}/wsgi.ini

[fabric]
# The bin/fab script
recipe = zc.recipe.egg
eggs = fabric
scripts = fab

[paster]
# The bin/paster script, for web-serving
recipe = repoze.recipe.egg
scripts = paster
eggs = ${buildout:eggs}

[repozo]
# Create the bin/repozo script
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[mkdirs]
# Make the correct directories in the installation directories
recipe = z3c.recipe.mkdir
paths = downloads
        src
        var/log
        var/instance

[testrunner]
# The bin/test script
recipe = zc.recipe.testrunner
eggs = ${buildout:eggs}
script = testrunner
